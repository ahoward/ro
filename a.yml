# Simple workflow for deploying static content to GitHub Pages
name: deploy ro content, api, and site to gh-pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        # NOTE: this enables git-lfs and caching
        # - https://github.com/actions/checkout/issues/834
        # - https://github.com/nschloe/action-cached-lfs-checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        # you may use this instead, if you don't want git-lfs caching
        #uses: actions/checkout@v4
        #with:
        #   lfs: true
      - name: setup gh-pages
        uses: actions/configure-pages@v3
        id: gh-pages
      - name: ro build
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: |
            export RO_URL=${{ steps.gh-pages.outputs.base_url }}/ro
            export RO_PAGE_SIZE=2
            bundle exec ./bin/ro build ./public/ro ./public/api/ro
            bundle exec ro site public
            tree ./public
      - name: upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: "./public"
      - name: deploy gh-pages
        id: deployment
        uses: actions/deploy-pages@v2
